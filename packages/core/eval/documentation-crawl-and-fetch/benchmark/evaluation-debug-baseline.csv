timestamp,siteId,siteName,question,searchQuery,searchResultsSizeKB,searchResultsPreview,success,retrievalScore,endpointScore,completenessScore,reasoning,error
2025-10-09T11:34:41.124Z,stripe-api,"Stripe API","How do I create a new customer in Stripe?","Stripe API create customer endpoint parameters",10,"/preview](/api/credit%5Fnotes/preview)[POST/v1/credit\_notes/:id/void](/api/credit%5Fnotes/void)  # [Customer Balance Transaction](/api/customer%5Fbalance%5Ftransactions)   Each customer has a [Balance](/api/customers/object#customer%5Fobject-balance) value; which denotes a debit or credit that’s automatically applied to their next invoice upon finalization. You may modify the value directly by using the [update customer API](/api/customers/update); or by creating a Customer Balance Transaction; which increments or decrements the customer’s `balance` by the specified `amount`.  Related guide: [Customer balance](/billing/customer/balance)  Endpoints  [POST/v1/customers/:id/balance\_transactions](/api/customer%5Fbalance%5Ftransactions/create)[POST/v1/customers/:id/balance\_transactions/:id](/api/customer%5Fbalance%5Ftransactions/update)[GET/v1/customers/:id/balance\_transactions/:id](/api/customer%5Fbalance%5Ftransactions/retrieve)[GET/v1/customers/:id/balance\_transactions](/api/customer%5Fbalance%5Ftransactions/list)  # [Customer Portal Session](/api/customer%5Fportal/sessions)   The Billing customer portal is a Stripe-hosted UI for subscription and billing management.  A portal configuration describes the functionality and features that you want to provide to your customers through the portal.  A portal session describes the instantiation of the customer portal for a particular customer. By visiting the session’s URL; the customer can manage their subscriptions and billing details. For security reasons; sessions are short-lived and will expire if the customer does not visit the URL. Create sessions on-demand when customers intend to manage their subscriptions and billing details.  Related guide: [Customer management](/customer-management)  Endpoints  [POST/v1/billing\_portal/sessions](/api/customer%5Fportal/sessions/create)  # [Customer Portal Configuration](/api/customer%5Fportal/configurations)   A portal configuration describes the functionality and behavior of ",true,40,10,5,"The retrieved documentation does not directly include the correct endpoint for creating a customer (which should be POST /v1/customers). It provides information about updating a customer and customer balance transaction endpoints, but not about creating a new customer. There is no clear mention of the customer creation endpoint, required parameters, or example request. While some details about customer-related endpoints and update parameters are included, they are only tangentially related and would not help a developer successfully make a customer creation API call.",""
2025-10-09T11:34:48.904Z,stripe-api,"Stripe API","What are the required fields for creating a payment intent?","payment intent creation required fields API endpoint parameters",10,"Payment Intents](/api/payment%5Fintents)   A PaymentIntent guides you through the process of collecting a payment from your customer. We recommend that you create exactly one PaymentIntent for each order or customer session in your system. You can reference the PaymentIntent later to see the history of payment attempts for a particular session.  A PaymentIntent transitions through [multiple statuses](/payments/intents#intent-statuses) throughout its lifetime as it interfaces with Stripe.js to perform authentication flows and ultimately creates at most one successful charge.  Related guide: [Payment Intents API](/payments/payment-intents)  Endpoints  [POST/v1/payment\_intents](/api/payment%5Fintents/create)[POST/v1/payment\_intents/:id](/api/payment%5Fintents/update)[GET/v1/payment\_intents/:id](/api/payment%5Fintents/retrieve)[GET/v1/payment\_intents](/api/payment%5Fintents/list)[POST/v1/payment\_intents/:id/cancel](/api/payment%5Fintents/cancel)[POST/v1/payment\_intents/:id/capture](/api/payment%5Fintents/capture)[POST/v1/payment\_intents/:id/confirm](/api/payment%5Fintents/confirm)[POST/v1/payment\_intents/:id/increment\_authorization](/api/payment%5Fintents/increment%5Fauthorization)[POST/v1/payment\_intents/:id/apply\_customer\_balance](/api/payment%5Fintents/apply%5Fcustomer%5Fbalance)[GET/v1/payment\_intents/search](/api/payment%5Fintents/search)[POST/v1/payment\_intents/:id/verify\_microdeposits](/api/payment%5Fintents/verify%5Fmicrodeposits)  # [Setup Intents](/api/setup%5Fintents)   A SetupIntent guides you through the process of setting up and saving a customer’s payment credentials for future payments. For example; you can use a SetupIntent to set up and save your customer’s card without immediately collecting a payment. Later; you can use [PaymentIntents](#payment%5Fintents) to drive the payment flow.  Create a SetupIntent when you’re ready to collect your customer’s payment credentials. Don’t maintain long-lived; unconfirmed SetupIntents because they mi",true,85,95,70,"The retrieved documentation includes the correct API endpoint for creating a payment intent (POST /v1/payment_intents). It begins to list parameters, specifically highlighting 'amount' as required and explaining its format, which is highly relevant. However, it does not provide a clearly delineated list of all required fields, nor a full example of the minimum set needed for a successful call. The documentation is also truncated, which limits completeness, so some details could be missing (like the 'currency' field, which is usually required). Overall, a developer could deduce the basics required, but would have to infer or look up full parameter lists elsewhere.",""
2025-10-09T11:34:52.975Z,stripe-api,"Stripe API","What parameters are required to refund a payment?","refund payment API required parameters endpoint documentation",10,"Payment Intents](/api/payment%5Fintents)   A PaymentIntent guides you through the process of collecting a payment from your customer. We recommend that you create exactly one PaymentIntent for each order or customer session in your system. You can reference the PaymentIntent later to see the history of payment attempts for a particular session.  A PaymentIntent transitions through [multiple statuses](/payments/intents#intent-statuses) throughout its lifetime as it interfaces with Stripe.js to perform authentication flows and ultimately creates at most one successful charge.  Related guide: [Payment Intents API](/payments/payment-intents)  Endpoints  [POST/v1/payment\_intents](/api/payment%5Fintents/create)[POST/v1/payment\_intents/:id](/api/payment%5Fintents/update)[GET/v1/payment\_intents/:id](/api/payment%5Fintents/retrieve)[GET/v1/payment\_intents](/api/payment%5Fintents/list)[POST/v1/payment\_intents/:id/cancel](/api/payment%5Fintents/cancel)[POST/v1/payment\_intents/:id/capture](/api/payment%5Fintents/capture)[POST/v1/payment\_intents/:id/confirm](/api/payment%5Fintents/confirm)[POST/v1/payment\_intents/:id/increment\_authorization](/api/payment%5Fintents/increment%5Fauthorization)[POST/v1/payment\_intents/:id/apply\_customer\_balance](/api/payment%5Fintents/apply%5Fcustomer%5Fbalance)[GET/v1/payment\_intents/search](/api/payment%5Fintents/search)[POST/v1/payment\_intents/:id/verify\_microdeposits](/api/payment%5Fintents/verify%5Fmicrodeposits)  # [Setup Intents](/api/setup%5Fintents)   A SetupIntent guides you through the process of setting up and saving a customer’s payment credentials for future payments. For example; you can use a SetupIntent to set up and save your customer’s card without immediately collecting a payment. Later; you can use [PaymentIntents](#payment%5Fintents) to drive the payment flow.  Create a SetupIntent when you’re ready to collect your customer’s payment credentials. Don’t maintain long-lived; unconfirmed SetupIntents because they mi",true,20,0,0,"The retrieved documentation does not surface any information specifically related to refunding a payment. It primarily focuses on Payment Intents (creating, confirming, capturing, etc.), Payment Method Domains, and Payment Method Configurations, but does not mention a refund endpoint (such as POST /v1/refunds) or describe required parameters like charge ID, amount, or reason. There is no overview, example, or parameter list for refunding payments, making it unhelpful for answering the user's refund-related question.",""
2025-10-09T11:34:59.512Z,slack-api,"Slack API","How can I authenticate a bot using OAuth2?","OAuth2 bot authentication API endpoint documentation grant_type client_id client_secret access_token",10,"  === SECURITY ===  {   "securityDefinitions": {     "slackAuth": {       "authorizationUrl": "https://slack.com/oauth/authorize";       "flow": "accessCode";       "scopes": {         "admin": "admin";         "admin.apps:read": "admin.apps:read";         "admin.apps:write": "admin.apps:write";         "admin.conversations:read": "admin.conversations:read";         "admin.conversations:write": "admin.conversations:write";         "admin.invites:read": "admin.invites:read";         "admin.invites:write": "admin.invites:write";         "admin.teams:read": "admin.teams:read";         "admin.teams:write": "admin.teams:write";         "admin.usergroups:read": "admin.usergroups:read";         "admin.usergroups:write": "admin.usergroups:write";         "admin.users:read": "admin.users:read";         "admin.users:write": "admin.users:write";         "authorizations:read": "authorizations:read";         "bot": "Bot user scope";         "calls:read": "calls:read";         "calls:write": "calls:write";         "channels:history": "channels:history";         "channels:manage": "channels:manage";         "channels:read": "channels:read";         "channels:write": "channels:write";         "chat:write": "chat:write";         "chat:write:bot": "Author messages as a bot";         "chat:write:user": "Author messages as a user";         "conversations:history": "conversations:history";         "conversations:read": "conversations:read";         "conversations:write": "conversations:write";         "dnd:read": "dnd:read";         "dnd:write": "dnd:write";         "emoji:read": "emoji:read";         "files:read": "files:read";         "files:write:user": "files:write:user";         "groups:history": "groups:history";         "groups:read": "groups:read";         "groups:write": "groups:write";         "identity.basic": "identity.basic";         "im:history": "im:history";         "im:read": "im:read";         "im:write": "im:write";         "links:write": "links:write";         "mpim:",true,85,90,75,"The retrieved documentation includes relevant security definitions and specifically describes the use of Slack OAuth2 endpoints for authentication, namely /oauth.access and /oauth.v2.access, which are key for bot authentication. It outlines required parameters like client_id, client_secret, code, and redirect_uri, and discusses the flow needed for OAuth2. Although examples are implicit in the OpenAPI specs and there are sample responses, the documentation lacks a step-by-step walkthrough or clear code sample of the full process (such as the initial authorization and token exchange sequence a developer would follow). Some of the retrieved content is fragmented and contains error messages and extra scope lists, but the presence of the correct endpoint information and parameters makes it generally sufficient for a developer familiar with OAuth2.",""
2025-10-09T11:35:06.622Z,slack-api,"Slack API","How do I send a message to a channel?","send message to channel API endpoint parameters documentation",10," unexpected factors affect processing. Callers should always check the value of the `ok` parameter in the response.  Error  Description  `access_denied`  Access to a resource specified in the request is denied.  `accesslimited`  Access to this method is limited on the current network  `account_inactive`  Authentication token is for a deleted user or workspace when using a `bot` token.  `cannot_add_more_channels_to_group`  The maximum number of channels have already been linked to the group.  `cannot_add_more_groups_to_channel`  The maximum number of groups have already been linked to the channel.  `channel_is_not_private`  The channel is a public channel; a multi-party direct message; a direct message; or is externally-shared.  `channel_not_found`  `channel_id` can’t be found.  `default_channel_restricted`  The channel is a default channel on the workspace.  `deprecated_endpoint`  The endpoint has been deprecated.  `ekm_access_denied`  Administrators have suspended the ability to post a message.  `enterprise_is_restricted`  The method cannot be called from an Enterprise.  `fatal_error`  The server could not complete your operation(s) without encountering a catastrophic error. It's possible some aspect of the operation succeeded before the error was raised.  `feature_not_enabled`  Feature not enabled  `group_already_linked_to_channel`  The IDP group is already linked to the channel  `group_must_not_be_empty`  The IDP group is currently empty.  `group_not_found`  `group_id` can’t be found.  `internal_error`  The server could not complete your operation(s) without encountering an error; likely due to a transient issue on our end. It's possible some aspect of the operation succeeded before the error was raised.  `invalid_arg_name`  The method was passed an argument whose name falls outside the bounds of accepted or expected values. This includes very long names and names with non-alphanumeric characters other than `_`. If you get this error; it is typically an indicatio",true,90,95,80,"The retrieved documentation provides detailed information about several relevant endpoints for sending messages to a channel, namely POST /chat.postMessage (the primary endpoint), as well as /chat.postEphemeral and /chat.meMessage. The relevant endpoint for the user's question ('send a message to a channel') is clearly listed as POST /chat.postMessage, with parameters and expected input formats (e.g., channel, text, token, attachments, etc.). However, the retrieved sample is cut off occasionally and lacks a full worked example or description of the 'text' parameter for chat.postMessage (the most essential part for sending content in a message). Parameter documentation is good for authentication and auxiliary fields, but for new users, inclusion of a minimal complete payload example (with both channel and text) would be optimal. The presence of several endpoints may introduce slight confusion, but the right endpoint is prominent and appropriately described.",""
2025-10-09T11:35:12.359Z,slack-api,"Slack API","How do I add a reaction to a message?","API add reaction to message endpoint parameters message_id reaction object",10," unexpected factors affect processing. Callers should always check the value of the `ok` parameter in the response.  Error  Description  `access_denied`  Access to a resource specified in the request is denied.  `accesslimited`  Access to this method is limited on the current network  `account_inactive`  Authentication token is for a deleted user or workspace when using a `bot` token.  `cannot_add_more_channels_to_group`  The maximum number of channels have already been linked to the group.  `cannot_add_more_groups_to_channel`  The maximum number of groups have already been linked to the channel.  `channel_is_not_private`  The channel is a public channel; a multi-party direct message; a direct message; or is externally-shared.  `channel_not_found`  `channel_id` can’t be found.  `default_channel_restricted`  The channel is a default channel on the workspace.  `deprecated_endpoint`  The endpoint has been deprecated.  `ekm_access_denied`  Administrators have suspended the ability to post a message.  `enterprise_is_restricted`  The method cannot be called from an Enterprise.  `fatal_error`  The server could not complete your operation(s) without encountering a catastrophic error. It's possible some aspect of the operation succeeded before the error was raised.  `feature_not_enabled`  Feature not enabled  `group_already_linked_to_channel`  The IDP group is already linked to the channel  `group_must_not_be_empty`  The IDP group is currently empty.  `group_not_found`  `group_id` can’t be found.  `internal_error`  The server could not complete your operation(s) without encountering an error; likely due to a transient issue on our end. It's possible some aspect of the operation succeeded before the error was raised.  `invalid_arg_name`  The method was passed an argument whose name falls outside the bounds of accepted or expected values. This includes very long names and names with non-alphanumeric characters other than `_`. If you get this error; it is typically an indicatio",true,90,100,85,"The documentation includes the exact relevant endpoint (POST /reactions.add) for adding a reaction to a message. It clearly lists all required parameters: 'channel' (channel ID), 'name' (emoji name), 'timestamp' (message timestamp), and 'token' (auth). Error codes and authentication requirements are provided, which is useful. However, it does not include a full example request, which would benefit developers looking for a copy-paste sample. Overall, the user can successfully make an API call using the retrieved directives.",""
2025-10-09T11:35:18.840Z,gmail-api,"Gmail API","How do I list all messages in a user's mailbox?","list messages API endpoint user mailbox documentation",9,"------ | | [batchDelete](/workspace/gmail/api/reference/rest/v1/users.messages/batchDelete) | POST /gmail/v1/users/{userId}/messages/batchDelete  Deletes many messages by message ID.                                                                                                                                                     | | [batchModify](/workspace/gmail/api/reference/rest/v1/users.messages/batchModify) | POST /gmail/v1/users/{userId}/messages/batchModify  Modifies the labels on the specified messages.                                                                                                                                           | | [delete](/workspace/gmail/api/reference/rest/v1/users.messages/delete)           | DELETE /gmail/v1/users/{userId}/messages/{id}  Immediately and permanently deletes the specified message.                                                                                                                                    | | [get](/workspace/gmail/api/reference/rest/v1/users.messages/get)                 | GET /gmail/v1/users/{userId}/messages/{id}  Gets the specified message.                                                                                                                                                                      | | [import](/workspace/gmail/api/reference/rest/v1/users.messages/import)           | POST /gmail/v1/users/{userId}/messages/import POST /upload/gmail/v1/users/{userId}/messages/import  Imports a message into only this user's mailbox; with standard email delivery scanning and classification similar to receiving via SMTP. | | [insert](/workspace/gmail/api/reference/rest/v1/users.messages/insert)           | POST /gmail/v1/users/{userId}/messages POST /upload/gmail/v1/users/{userId}/messages  Directly inserts a message into only this user's mailbox similar to IMAP APPEND; bypassing most scanning and classification.                           | | [list](/workspace/gmail/api/reference/rest/v1",true,95,100,85,"The retrieved documentation provides the exact endpoint needed to list messages in a user's mailbox: GET /gmail/v1/users/{userId}/messages. It also details the required path parameter ('userId'), optional query parameters (maxResults, pageToken, q, labelIds, includeSpamTrash), and includes a description of what the endpoint does. The documentation even gives a pointer to example usage, though it does not include a direct code snippet in the extract. There is some additional information about other endpoints, but it does not detract from the clarity or usefulness for the user's question.",""
2025-10-09T11:35:24.551Z,gmail-api,"Gmail API","How do I list all labels in a mailbox?","list labels API endpoint mailbox",7,"ts in the user's mailbox.                                                                                                      | | [send](/workspace/gmail/api/reference/rest/v1/users.drafts/send)     | POST /gmail/v1/users/{userId}/drafts/send POST /upload/gmail/v1/users/{userId}/drafts/send  Sends the specified; existing draft to the recipients in the To; Cc; and Bcc headers. | | [update](/workspace/gmail/api/reference/rest/v1/users.drafts/update) | PUT /gmail/v1/users/{userId}/drafts/{id} PUT /upload/gmail/v1/users/{userId}/drafts/{id}  Replaces a draft's content.                                                             |  ## REST Resource: [v1.users.history](/workspace/gmail/api/reference/rest/v1/users.history)  | Methods                                                           |                                                                                              | | ----------------------------------------------------------------- | -------------------------------------------------------------------------------------------- | | [list](/workspace/gmail/api/reference/rest/v1/users.history/list) | GET /gmail/v1/users/{userId}/history  Lists the history of all changes to the given mailbox. |  ## REST Resource: [v1.users.labels](/workspace/gmail/api/reference/rest/v1/users.labels)  | Methods                                                              |                                                                                                                                                                          | | -------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | | [create](/workspace/gmail/api/reference/rest/v1/users.labels/create) | POST /gmail/v1/users/{userId}/labels  Creates a new label.                                                                   ",true,95,100,80,"The retrieved documentation includes the exact endpoint to use for listing all labels in a mailbox: GET /gmail/v1/users/{userId}/labels. This matches the user's question precisely, and provides a clear description that this endpoint 'Lists all labels in the user's mailbox.' The required path parameter userId is detailed, including its default value ('me'), which covers the most common usage. The supported OAuth scopes are given. However, while the endpoint and parameters are well specified, the documentation does not include a sample API call or show what the response looks like, which would be helpful for implementation. Still, all key elements to make the call are present.",""
2025-10-09T11:35:32.122Z,gmail-api,"Gmail API","What's the rate limit per user for Gmail API requests?","Gmail API rate limits per user documentation",9,"il/api/reference/rest/v1/users/getProfile) | GET /gmail/v1/users/{userId}/profile  Gets the current user's Gmail profile.                               | | [stop](/workspace/gmail/api/reference/rest/v1/users/stop)             | POST /gmail/v1/users/{userId}/stop  Stop receiving push notifications for the given user mailbox.          | | [watch](/workspace/gmail/api/reference/rest/v1/users/watch)           | POST /gmail/v1/users/{userId}/watch  Set up or update a push notification watch on the given user mailbox. |  ## REST Resource: [v1.users.drafts](/workspace/gmail/api/reference/rest/v1/users.drafts)  | Methods                                                              |                                                                                                                                                                                   | | -------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | [create](/workspace/gmail/api/reference/rest/v1/users.drafts/create) | POST /gmail/v1/users/{userId}/drafts POST /upload/gmail/v1/users/{userId}/drafts  Creates a new draft with the DRAFT label.                                                       | | [delete](/workspace/gmail/api/reference/rest/v1/users.drafts/delete) | DELETE /gmail/v1/users/{userId}/drafts/{id}  Immediately and permanently deletes the specified draft.                                                                             | | [get](/workspace/gmail/api/reference/rest/v1/users.drafts/get)       | GET /gmail/v1/users/{userId}/drafts/{id}  Gets the specified draft.                                                                                                               | | [list](/workspace/gmail/api/reference/rest/v1/users.drafts/list)     | GET /gmail/v1/users/{userId}/drafts  Lists the draf",true,20,10,10,"The retrieved documentation mostly lists various Gmail API endpoints and their usage (such as drafts, messages, delegates), but it does not include any information on rate limits per user, which is the user's actual question. There are detailed descriptions and parameters for endpoints, but nothing about request quotas, rate limits, or relevant usage policies for API calls. Thus, while endpoint and parameter descriptions are provided, the crucial rate limit information is completely missing.",""
2025-10-09T11:35:36.841Z,openai-api,"OpenAI API","What parameter do I use to get structured output?","structured output parameter API endpoint documentation",10,"-2024-07-18";     "output": [];     "previous_response_id": null;     "reasoning_effort": null;     "store": false;     "temperature": 1;     "text": {       "format": {         "type": "text"       }     };     "tool_choice": "auto";     "tools": [];     "top_p": 1;     "truncation": "disabled";     "usage": null;     "user": null;     "metadata": {}   };   "sequence_number": 1 } ```  ##   response.output\_item.added  Emitted when a new output item is added.  [](#responses-streaming/response/output%5Fitem/added-item)  item  object  The output item that was added.  [](#responses-streaming/response/output%5Fitem/added-output%5Findex)  output\_index  integer  The index of the output item that was added.  [](#responses-streaming/response/output%5Fitem/added-sequence%5Fnumber)  sequence\_number  integer  The sequence number of this event.  [](#responses-streaming/response/output%5Fitem/added-type)  type  string  The type of the event. Always `response.output_item.added`.  OBJECT response.output\_item.added  ```JSON 1 2 3 4 5 6 7 8 9 10 11 12 {   "type": "response.output_item.added";   "output_index": 0;   "item": {     "id": "msg_123";     "status": "in_progress";     "type": "message";     "role": "assistant";     "content": []   };   "sequence_number": 1 } ```  ##   response.output\_item.done  Emitted when an output item is marked done.  [](#responses-streaming/response/output%5Fitem/done-item)  item  object  The output item that was marked done.  [](#responses-streaming/response/output%5Fitem/done-output%5Findex)  output\_index  integer  The index of the output item that was marked done.  [](#responses-streaming/response/output%5Fitem/done-sequence%5Fnumber)  sequence\_number  integer  The sequence number of this event.  [](#responses-streaming/response/output%5Fitem/done-type)  type  string  The type of the event. Always `response.output_item.done`.  OBJECT response.output\_item.done  ```JSON 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 {   "type": "response.output_",true,25,10,10,"The retrieved documentation does not clearly address the user's question about which parameter controls structured output. There is some mention of output types and 'format' fields in response event schemas, but no explicit information about a parameter to request structured output in an API request. There is no clear endpoint documentation relevant to structured output; the only API endpoints shown involve uploads and fine-tuning checkpoints, which are unrelated. Parameter lists and examples focus on file uploads and permissions, not response formatting. Thus, the retrieval misses the core information needed: the specific parameter to request structured output, the endpoint it's used with, and usage context.",""
2025-10-09T11:35:41.442Z,openai-api,"OpenAI API","How can I retrieve files from my vector database?","vector database API retrieve files endpoint parameters data structures file retrieval",10,"id: "vs_abc123" }   );   console.log(vectorStoreFile); }  main(); ```  Response  ```json 1 2 3 4 5 6 7 8 {   "id": "file-abc123";   "object": "vector_store.file";   "created_at": 1699061776;   "vector_store_id": "vs_abcd";   "status": "completed";   "last_error": null } ```  ##   Retrieve vector store file content  get https://api.openai.com/v1/vector\_stores/{vector\_store\_id}/files/{file\_id}/content  Retrieve the parsed contents of a vector store file.  #### Path parameters  [](#vector-stores-files-getcontent-file%5Fid)  file\_id  string  Required  The ID of the file within the vector store.  [](#vector-stores-files-getcontent-vector%5Fstore%5Fid)  vector\_store\_id  string  Required  The ID of the vector store.  #### Returns  The parsed contents of the specified vector store file.  Example request  curl  ```bash 1 2 3 curl \ https://api.openai.com/v1/vector_stores/vs_abc123/files/file-abc123/content \ -H "Authorization: Bearer $OPENAI_API_KEY" ```  Response  ```json 1 2 3 4 5 6 7 8 9 {   "file_id": "file-abc123";   "filename": "example.txt";   "attributes": {"key": "value"};   "content": [     {"type": "text"; "text": "..."};     ...   ] } ```  ##   Update vector store file attributes  post https://api.openai.com/v1/vector\_stores/{vector\_store\_id}/files/{file\_id}  Update attributes on a vector store file.  #### Path parameters  [](#vector-stores-files-updateattributes-file%5Fid)  file\_id  string  Required  The ID of the file to update attributes.  [](#vector-stores-files-updateattributes-vector%5Fstore%5Fid)  vector\_store\_id  string  Required  The ID of the vector store the file belongs to.  #### Request body  [](#vector-stores-files-updateattributes-attributes)  attributes  map  Required  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format; and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Value",true,95,100,90,"The documentation provides a highly relevant and direct answer to the user's question about retrieving files from a vector database. It clearly identifies the correct endpoint (GET /v1/vector_stores/{vector_store_id}/files/{file_id}/content), includes required path parameters, and gives a working curl example complete with parameter substitution. The response structure is detailed. There is some additional information about updating and deleting files, but this does not detract from the clarity of the retrieval instructions. Completeness is high, but could be slightly improved with further explanation of authentication requirements or optional parameters (if any).",""
2025-10-09T11:35:47.399Z,openai-api,"OpenAI API","How do I include both text and images in the same input?","multipart input text image API endpoint documentation data structure parameters",10,"image.  [](#images-streaming/image%5Fgeneration/partial%5Fimage-partial%5Fimage%5Findex)  partial\_image\_index  integer  0-based index for the partial image (streaming).  [](#images-streaming/image%5Fgeneration/partial%5Fimage-quality)  quality  string  The quality setting for the requested image.  [](#images-streaming/image%5Fgeneration/partial%5Fimage-size)  size  string  The size of the requested image.  [](#images-streaming/image%5Fgeneration/partial%5Fimage-type)  type  string  The type of the event. Always `image_generation.partial_image`.  OBJECT image\_generation.partial\_image  ```JSON 1 2 3 4 5 6 7 8 9 10 {   "type": "image_generation.partial_image";   "b64_json": "...";   "created_at": 1620000000;   "size": "1024x1024";   "quality": "high";   "background": "transparent";   "output_format": "png";   "partial_image_index": 0 } ```  ##   image\_generation.completed  Emitted when image generation has completed and the final image is available.  [](#images-streaming/image%5Fgeneration/completed-b64%5Fjson)  b64\_json  string  Base64-encoded image data; suitable for rendering as an image.  [](#images-streaming/image%5Fgeneration/completed-background)  background  string  The background setting for the generated image.  [](#images-streaming/image%5Fgeneration/completed-created%5Fat)  created\_at  integer  The Unix timestamp when the event was created.  [](#images-streaming/image%5Fgeneration/completed-output%5Fformat)  output\_format  string  The output format for the generated image.  [](#images-streaming/image%5Fgeneration/completed-quality)  quality  string  The quality setting for the generated image.  [](#images-streaming/image%5Fgeneration/completed-size)  size  string  The size of the generated image.  [](#images-streaming/image%5Fgeneration/completed-type)  type  string  The type of the event. Always `image_generation.completed`.  [](#images-streaming/image%5Fgeneration/completed-usage)  usage  object  For `gpt-image-1` only; the token usage information",true,40,30,20,"The retrieved documentation includes details about image generation, image editing, embeddings, and some examples of interacting with text-based API endpoints (like /chat/completions and /responses). However, it does not clearly document how to send both text and images together in the same input. There is no explicit mention or example of a combined data structure, nor an endpoint that describes accepting both text and images in one request payload. Some context hints at the use of 'b64_json' for images and 'input' for text, but it remains unclear how or if these can be merged in a single call. Required fields, parameter naming, and request body structure for multipart input are not provided. Therefore, it does not sufficiently answer a developer's need to know how to include both text and images in the same input.",""
2025-10-09T11:35:54.064Z,zignsec-api,"Zignsec API","How can I Create a proof-of-address session?","create proof-of-address session API endpoint parameters documentation",10,"whenever an event occurs on a session with the given identifier.";"parameters":[];"requestBody":{"content":{"application/json":{"schema":{"description":"Session events that are sent as callbacks through webhooks.";"properties":{"event":{"description":"The type of event that occurred.";"type":"string"};"gdpr_user_id":{"description":"Optional User Identifier";"type":"string"};"id":{"description":"Session Event ID";"type":"string"};"integration_id":{"description":"An identifier to the service provider that triggered this session event.";"type":"string"};"relay_state":{"description":"Optional Custom Parameter to be included in webhook calls ";"type":"string"};"status":{"description":"The Status of the session";"type":"string"};"workflow_session_id":{"description":"The id of the workflow session that this event relates to.";"type":"string"}};"required":["id";"workflow_session_id";"integration_id";"event";"result"];"title":"ValidateCompanyCallback";"type":"object"}}};"description":"Session Event Data";"required":true};"responses":{"200":{"content":{"application/json":{}};"description":"Acknowledge Session Event"};"204":{"content":{"application/json":{}};"description":"Acknowledge Session Event"}};"summary":"Session Event Callback Webhook";"tags":[]}}}};"deprecated":false;"operationId":"postValidateCompanyGdc";"parameters":[];"requestBody":{"content":{"application/json":{"schema":{"description":"Parameters that initiate a new synchronous data session request.";"properties":{"gdpr_user_id":{"description":"Optional User Identifier";"type":"string"};"metadata":{"additionalProperties":false;"example":{"address":{"country_code":"US";"house_number":"290";"locality":"ASHEVILLE";"postal_code":"28804";"province":"NC";"thoroughfare":"Macon Avenue"};"country_code":"US";"email":{"domain":"random.com"};"identity":{"business_id":"47-423432";"organization_name":"Random Inc."};"options":"BusinessVerify;MessageVerbose"};"properties":{"address":{"additionalProperties":false;"properties":{"t",true,85,95,75,"The retrieval includes the relevant endpoint, clearly specifying POST /core/api/sessions/proof_of_address/document as the correct API call for creating a proof-of-address session. This matches the user's intent closely. The documentation provides information on the parameters (such as gdpr_user_id, locale, and metadata with address and user details), showing their types and descriptions. However, while required and optional fields are present, the example payload is only partial and some parameter descriptions are not fully expanded. There is also no concrete sample request/response shown, nor a step-by-step usage guide, slightly reducing completeness for a developer seeking to implement immediately.",""
2025-10-09T11:35:58.609Z,zignsec-api,"Zignsec API","How can I start an identity verification session?","start identity verification session API endpoint parameters documentation",10,"tity_check/pep_global_member_check/due_diligence_status":{"post":{"callbacks":{"SessionEvent":{"webhook_url":{"post":{"callbacks":{};"deprecated":false;"description":"Invoked whenever an event occurs on a session with the given identifier.";"parameters":[];"requestBody":{"content":{"application/json":{"schema":{"description":"Session events that are sent as callbacks through webhooks.";"properties":{"event":{"description":"The type of event that occurred.";"type":"string"};"gdpr_user_id":{"description":"Optional User Identifier";"type":"string"};"id":{"description":"Session Event ID";"type":"string"};"integration_id":{"description":"An identifier to the service provider that triggered this session event.";"type":"string"};"relay_state":{"description":"Optional Custom Parameter to be included in webhook calls ";"type":"string"};"status":{"description":"The Status of the session";"type":"string"};"workflow_session_id":{"description":"The id of the workflow session that this event relates to.";"type":"string"}};"required":["id";"workflow_session_id";"integration_id";"event";"result"];"title":"UpdateDueDiligenceStatusCallback";"type":"object"}}};"description":"Session Event Data";"required":true};"responses":{"200":{"content":{"application/json":{}};"description":"Acknowledge Session Event"};"204":{"content":{"application/json":{}};"description":"Acknowledge Session Event"}};"summary":"Session Event Callback Webhook";"tags":[]}}}};"deprecated":false;"operationId":"postIdentityCheckPepGlobalMemberCheckDueDiligenceStatus";"parameters":[];"requestBody":{"content":{"application/json":{"schema":{"description":"";"properties":{"session_id":{"description":"Session ID";"example":"44d8e35b-d3d7-4d45-9d80-06e3ccf10736";"type":"string"};"status":{"description":"Status";"example":1;"type":"integer"}};"title":"Session ID Request";"type":"object"}}};"description":"Create Session Parameters";"required":false};"responses":{"200":{"content":{"application/json":{}};"description":"Update ",true,65,50,45,"The retrieved documentation includes some relevant content about API session endpoints and related parameters, such as POST endpoints for creating sessions (e.g., /core/api/sessions/wyzerwork/merchant-onboarding and /core/api/sessions/proof_of_address/document). However, there is no clear, single endpoint explicitly labeled as 'start identity verification session,' and the content is fragmented, making it unclear if these endpoints are meant for general identity verification or other flows like proof of address or merchant onboarding. Parameter details are mentioned for some endpoints, but key information such as required vs optional parameters, example requests, and direct usage instructions for an identity verification session are missing or unclear. Consequently, the documentation does not fully empower the developer to make a successful call specific to identity verification without further clarification.",""
2025-10-09T11:36:04.276Z,sitecore-components-api,"Sitecore Cloud Components API","How do I interact with a file source like azure blob storage?","azure blob storage API endpoints file upload download authentication request parameters",1,"  === OPENAPI OPERATIONS ===  [POST /api/files/generateSAS] {"description":"Route used to generate SAS Token to be used in frontend to upload files to Azure blob storage";"tags":["Files"];"parameters":[{"name":"body";"in":"body";"schema":{"$schema":"http://json-schema.org/draft-07/schema#";"type":"object";"additionalProperties":false;"properties":{"storedPolicyName":{"type":"string"};"category":{"enum":["thumbnails";"uploads";"images";"webcomponents"]}};"required":["category"]}}];"responses":{"200":{"description":"Default Response";"schema":{"type":"object";"additionalProperties":true}};"400":{"description":"Default Response";"schema":{"type":"object";"additionalProperties":false;"properties":{"statusCode":{"type":"integer"};"error":{"type":"string";"enum":["Bad Request"]};"message":{"type":"string"}};"required":["statusCode";"error";"message"]}};"404":{"description":"Default Response";"schema":{"type":"object";"additionalProperties":false;"properties":{"statusCode":{"type":"integer"};"error":{"type":"string";"enum":["Not Found"]};"message":{"type":"string"}};"required":["statusCode";"error";"message"]}};"500":{"description":"Default Response";"schema":{"type":"object";"additionalProperties":false;"properties":{"statusCode":{"type":"integer"};"error":{"type":"string";"enum":["Internal server error"]};"message":{"type":"string"}};"required":["statusCode";"error";"message"]}}}}",true,75,90,65,"The retrieved documentation directly surfaces the relevant endpoint (POST /api/files/generateSAS) for generating a SAS token for Azure Blob Storage, which is a key step in interacting with the file source securely. The endpoint is clearly specified, and the request body parameters (body must have 'category', optional 'storedPolicyName') are provided with their types and possible values, boosting both retrieval and endpoint clarity. However, the documentation lacks practical usage examples and does not detail the full workflow for upload/download operations or include specifics about how to actually use the returned SAS token to upload/download files from Azure Blob Storage. Also, authentication and header information are missing. Thus, it’s a good start for SAS generation, but does not fully enable a developer to complete the API call sequence for file management.",""
2025-10-09T11:36:11.958Z,sitecore-components-api,"Sitecore Cloud Components API","I want to upload a new stylesheet","upload stylesheet API endpoint parameters documentation",8,"  === OPENAPI OPERATIONS ===  [PUT /api/libraries/{libraryId}/stylesheets/] {"description":"Create or update a stylesheet; requires correct revision/status to be provided.";"tags":["Stylesheets"];"parameters":[{"name":"body";"in":"body";"schema":{"required":["revision";"source";"status"];"properties":{"libraryId":{"description":"The identifier of the Library that Stylesheet belongs to";"minLength":3;"maxLength":64;"type":"string"};"id":{"description":"The identifier of the Stylesheet";"minLength":3;"maxLength":64;"type":"string"};"source":{"description":"The source of the Stylesheet"};"formatVersion":{"description":"The format version of the Stylesheet.";"minimum":0;"type":"integer"};"status":{"description":"The status of the Stylesheet";"enum":["draft";"published";"saved";"staged"];"type":"string"};"revision":{"description":"The numeric revision of the Stylesheet.";"minimum":0;"type":"integer"};"createdAt":{"description":"The timestamp the Stylesheet was created at";"type":"string";"format":"date-time"};"modifiedAt":{"description":"The timestamp when the Stylesheet was last modified at";"type":"string";"format":"date-time"}};"description":"Defines the schema for Stylesheet.";"type":"object";"additionalProperties":false;"$schema":"http://json-schema.org/draft-07/schema#";"definitions":{}}};{"type":"string";"minLength":3;"required":true;"in":"path";"name":"libraryId"}];"responses":{"200":{"description":"Defines the schema for Stylesheet.";"schema":{"required":["createdAt";"formatVersion";"id";"libraryId";"modifiedAt";"revision";"source";"status"];"properties":{"libraryId":{"description":"The identifier of the Library that Stylesheet belongs to";"minLength":3;"maxLength":64;"type":"string"};"id":{"description":"The identifier of the Stylesheet";"minLength":3;"maxLength":64;"type":"string"};"source":{"description":"The source of the Stylesheet"};"formatVersion":{"description":"The format version of the Stylesheet.";"minimum":0;"type":"integer"};"status":{"description":",true,90,90,80,"The documentation surfaces a very relevant endpoint: PUT /api/libraries/{libraryId}/stylesheets/, which appears directly intended for uploading or updating a stylesheet. The parameters and body schema are included in detail (such as 'libraryId', 'source', 'status', 'revision', etc.), allowing a developer to see what data is needed. However, the documentation does not include a concrete example or step-by-step usage sample, and it is slightly ambiguous whether you need to create a new 'id' or if it is auto-generated. Still, the required fields are clear. Other retrieved endpoints are not relevant to uploading stylesheets but do not detract from the utility. Overall, it's quite close to ideal, especially for someone already familiar with API requests.",""
2025-10-09T11:36:15.882Z,openstorage-api,"OpenStorage API","Create a new role","create role API endpoint parameters request body",7,"ckground filesystem trim operation   apiSdkFilesystemTrimStartResponse   apiSdkFilesystemTrimStatusResponse   SdkFilesystemTrimStopRequest defines a request to stop a background filesystem trim operation   Empty response   Defines the status of an existing job   apiSdkGetRebalanceJobStatusResponse   apiSdkGetRebalanceScheduleResponse   Defines credentials for Google   Defines the response for Google credentials   Defines a response containing the capabilities of the cluster   Defines a response containing version information   Defines a response for an SDK request that spins up a new job to perform the request   Defines credentials for NFS   Defines the response for NFS credential   SdkNodeCordonAttachmentsRequest request for disabling new volume attachments from a node   SdkNodeCordonAttachmentsRespinse response for disabling new volume attachments from a node   Defines a node drain volume attachments request   Defines a response with a list of node ids   Defines a response with a list of nodes   Defines a response when inspecting a node   Defines a response when inspecting a node   Defines response containing status of the trigger   SdkNodeUncordonAttachmentsRequest request for re-enabling volume attachments for a node   SdkNodeUncordonAttachmentsRespinse response for enabling new volume attachments from a node   Defines response containing Node's volumes/snapshot capacity usage details   Defines a request to create an object store   Defines a response when an object store has been created for a specified volume   Empty response   Defines a response when inspecting an object store endpoint   Defines a request to update an object store   Empty response   Define a request to create storage policy   Empty response   Define default storage policy response   Empty Response   Define a storage policy enumerate response   Define a storage policy inspect response   Empty Request   Empty Response   Define a request to set default storage policy   Empty Response   Define a r",true,10,0,0,"The retrieved documentation does not provide any API endpoint or example specifically related to 'creating a new role'. The closest matches are about credentials, volumes, and migrations, but there is no mention of roles, role creation endpoints, or relevant request body parameters. Developers looking to create a new role would not find the required endpoint, parameters, or sample requests based on this documentation. As a result, the retrieval, endpoint, and completeness scores are all extremely low.",""
2025-10-09T11:36:20.276Z,openstorage-api,"OpenStorage API","Activate a cluster domain","API activate cluster domain endpoint documentation parameters",7,"lusterdomains/deactivate/{cluster\_domain\_name}](#/OpenStorageClusterDomains/OpenStorageClusterDomains%5FDeactivate)  Deactivates a cluster domain in the cluster. All the nodes which are part of a deactivated cluster domain. will not participate in cluster quorum calculation  GET[/v1/clusterdomains/inspect/{cluster\_domain\_name}](#/OpenStorageClusterDomains/OpenStorageClusterDomains%5FInspect)  Inspect returns information about a cluster domain and a status indicating whether the cluster domain is active  #### [OpenStorageClusterPair](#/OpenStorageClusterPair)  GET[/v1/clusterpairs](#/OpenStorageClusterPair/OpenStorageClusterPair%5FEnumerate)  Enumerate returns list of cluster pairs  POST[/v1/clusterpairs](#/OpenStorageClusterPair/OpenStorageClusterPair%5FCreate)  Creates Pair with a remote cluster and returns details about the remote cluster  GET[/v1/clusterpairs/inspect/{id}](#/OpenStorageClusterPair/OpenStorageClusterPair%5FInspect)  Inspect information about a cluster pair  GET[/v1/clusterpairs/token](#/OpenStorageClusterPair/OpenStorageClusterPair%5FGetToken)  GetToken returns a auth token  POST[/v1/clusterpairs/token](#/OpenStorageClusterPair/OpenStorageClusterPair%5FResetToken)  ResetToken returns a auth token  DELETE[/v1/clusterpairs/{cluster\_id}](#/OpenStorageClusterPair/OpenStorageClusterPair%5FDelete)  Delete a cluster pair  #### [OpenStorageCluster](#/OpenStorageCluster)  GET[/v1/clusters/inspectcurrent](#/OpenStorageCluster/OpenStorageCluster%5FInspectCurrent)  InspectCurrent returns information about the current cluster  #### [OpenStorageCredentials](#/OpenStorageCredentials)  GET[/v1/credentials](#/OpenStorageCredentials/OpenStorageCredentials%5FEnumerate)  Enumerate returns a list of credential ids  POST[/v1/credentials](#/OpenStorageCredentials/OpenStorageCredentials%5FCreate)  Create is used to submit cloud credentials. It will return an id of the credentials once they are verified to work.  GET[/v1/credentials/inspect/{credential\_id}](#/OpenSt",true,95,100,80,"The retrieved documentation includes the exact, correct endpoint for activating a cluster domain: POST /v1/clusterdomains/activate/{cluster_domain_name}. It specifies the required path parameter (cluster_domain_name, type string) with a clear description on its purpose. The endpoint description also provides a useful summary of the operation. However, while it covers the parameter and provides response schemas, it lacks a concrete request/response example or sample payload, which would further help developers understand its use. There is some unrelated endpoint information included, but this does not hinder identification of the correct operation.",""
2025-10-09T11:36:26.493Z,caspio-api,"Caspio REST API","how do I deploy a DataPage?","deploy DataPage API endpoint parameters documentation",5,"  === OPENAPI OPERATIONS ===  [GET /v3/bridgeApplications/{externalKey}/datapages/{appKey}/deployment] {"tags":["Bridge Applications"];"summary":"Returns the DataPage deploy code";"description":"Available deployment methods: **iFrame**; **URL**; **Embedded**; **Net**.  \nValues are case-insensitive and can be replaced by a single character of each string (**I**; **U**; **E**; **N**) respectively.";"operationId":"GetBridgeApplicationDataPageDeploymentCode";"parameters":[{"name":"externalKey";"in":"path";"description":"App ID";"required":true;"schema":{"type":"string"}};{"name":"appKey";"in":"path";"description":"DataPage ID";"required":true;"schema":{"type":"string"}};{"name":"method";"in":"query";"description":"Deployment method";"required":true;"schema":{"type":"string"}}];"responses":{"200":{"description":"OK";"content":{"application/json":{"schema":{"type":"string"}};"text/json":{"schema":{"type":"string"}};"application/xml":{"schema":{"type":"string"}};"text/xml":{"schema":{"type":"string"}}}};"400":{"description":"BadRequest"};"401":{"description":"Unauthorized"};"403":{"description":"Forbidden"};"404":{"description":"NotFound"}}}  ---  [PUT /v3/outgoingWebhooks/{webhookId}] {"tags":["Outgoing Webhooks"];"summary":"Updates the outgoing webhook definition";"description":"At least one of the following parameters must be included in the request body:\n- **Name** must be unique for each outgoing webhook.\n- **Description**\n- **OutgoingUrls** must be unique for each outgoing webhook; and should be a valid HTTPS address. If the account plan has access to multicast webhooks; more than one can be added.\n- **CallThrottling** should be higher than 0 and lower than the max value for the account plan.\n- **Enabled** can be set to true or false to configure statuses of all events related to this webhook.";"operationId":"UpdateOutgoingWebhook";"parameters":[{"name":"webhookId";"in":"path";"description":"";"required":true;"schema":{"type":"string"}}];"requestBody":{"descrip",true,95,100,85,"The retrieved documentation is highly relevant: it identifies the exact endpoint for deploying a DataPage (PUT /v3/bridgeApplications/{externalKey}/datapages/{appKey}/deployment) and also includes an option for bulk deployment (PUT /v3/bridgeApplications/{externalKey}/datapages/deployment). The endpoint is clearly specified along with required path parameters (externalKey for App ID and appKey for DataPage ID). The request body is described as 'New Deployment State,' and refers to a schema (SetDeploymentStatusRequest) needed for the call, but does not detail the exact fields or provide example payloads. There's slightly less completeness since it omits a sample body, so the developer may need to consult schema details elsewhere, but the documentation is otherwise sufficient to identify how to deploy a DataPage via API.",""
2025-10-09T11:36:30.411Z,caspio-api,"Caspio REST API","Create a new ongoing webhook","create webhook endpoint ongoing subscription API documentation",5,"  === OPENAPI OPERATIONS ===  [PUT /v3/outgoingWebhooks/{webhookId}] {"tags":["Outgoing Webhooks"];"summary":"Updates the outgoing webhook definition";"description":"At least one of the following parameters must be included in the request body:\n- **Name** must be unique for each outgoing webhook.\n- **Description**\n- **OutgoingUrls** must be unique for each outgoing webhook; and should be a valid HTTPS address. If the account plan has access to multicast webhooks; more than one can be added.\n- **CallThrottling** should be higher than 0 and lower than the max value for the account plan.\n- **Enabled** can be set to true or false to configure statuses of all events related to this webhook.";"operationId":"UpdateOutgoingWebhook";"parameters":[{"name":"webhookId";"in":"path";"description":"";"required":true;"schema":{"type":"string"}}];"requestBody":{"description":"";"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookPutRequest"}}};"required":true};"responses":{"200":{"description":"OK";"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookPutResponse"}};"text/json":{"schema":{"$ref":"#/components/schemas/WebhookPutResponse"}}}};"400":{"description":"BadRequest"};"401":{"description":"Unauthorized"};"403":{"description":"Forbidden"};"404":{"description":"NotFound"}}}  ---  [POST /v3/outgoingWebhooks] {"tags":["Outgoing Webhooks"];"summary":"Creates a new outgoing webhook";"description":"- **Name** is required and must be unique for each outgoing webhook.\n- **Description** is optional. \n- **OutgoingUrls** is required; must be unique for each outgoing webhook; and should be a valid HTTPS address. If the account plan has access to multicast webhooks; more than one can be added.\n- **CallThrottling** is optional and should be higher than 0 and lower than the max value for the account plan. If not provided; the account plan's max value is used.";"operationId":"CreateOutgoingWebhook";"requestBody":{"description":"";"conten",true,95,100,80,"The retrieved documentation is highly relevant as it includes the exact endpoint needed to create a new ongoing webhook: POST /v3/outgoingWebhooks. The endpoint is clearly described, with details for required parameters such as Name and OutgoingUrls and optional parameters like Description and CallThrottling. However, the documentation lacks concrete request/response examples and does not elaborate on the authentication scheme or header requirements, which would be necessary for a complete API call. Overall, it's very close to what a developer needs to successfully create a webhook, but a few practical details are missing.",""
2025-10-09T11:36:34.480Z,epaypolicy-api,"ePayPolicy API","Please cancel a ongoing payment schedule","cancel payment schedule API endpoint parameters",7,"  === OPENAPI OPERATIONS ===  [POST /api/v2/paymentSchedules] {"tags":["PaymentSchedules"];"summary":"Creates a payment schedule for a delayed payment or recurring payments.";"operationId":"PaymentSchedules_Post";"consumes":["application/json";"text/json";"application/xml";"text/xml";"application/x-www-form-urlencoded"];"produces":["application/json";"text/json";"application/xml";"text/xml"];"parameters":[{"name":"postPaymentScheduleRequestModel";"in":"body";"description":"Contains the parameters for the payment schedule. In the response; the Id of the created payment schedule is the last part of the URI in the location header attribute.";"required":true;"schema":{"$ref":"#/definitions/PostPaymentScheduleRequestModel"}};{"name":"impersonationAccountKey";"in":"header";"description":"The key that allows impersonation of another account for which the transaction(s) will be processed. Only specify a value if the account being impersonated is different from the account that is submitting this request.";"required":false;"schema":{"type":"string"};"type":"string";"default":""}];"responses":{"201":{"description":"The payment schedule was created successfully. The Id of the schedule is in the location header attribute."};"400":{"description":"Invalid request. Check the body for any related errors.";"schema":{"type":"object";"additionalProperties":{"$ref":"#/definitions/Object"}}};"401":{"description":"Invalid credentials. Please verify the key and secret used to generate the authorization header value."}};"deprecated":false;"security":[{"basic":[]}]}  ---  [POST /api/v2/paymentSchedules/{id}/cancel] {"tags":["PaymentSchedules"];"summary":"Cancels an active payment schedule.";"operationId":"PaymentSchedules_Cancel";"consumes":[];"produces":["application/json";"text/json";"application/xml";"text/xml"];"parameters":[{"name":"id";"in":"path";"description":"The public Id of the payment schedule.";"required":true;"type":"string"};{"name":"impersonationAccountKey";"in":"header";"de",true,95,100,80,"The retrieved documentation includes the exact endpoint needed to cancel an ongoing payment schedule: POST /api/v2/paymentSchedules/{id}/cancel. The endpoint is clearly identified, including the fact that it is a POST request and requires the payment schedule 'id' as a path parameter. It also lists an optional impersonationAccountKey header. While the operation is described and the required parameters are listed, there are no concrete example requests or sample payloads provided, which would be helpful for immediate implementation, thus the completeness score is slightly reduced.",""
2025-10-09T11:36:43.232Z,epaypolicy-api,"ePayPolicy API","Can you calculate transaction fees for me","transaction fee calculation API endpoint parameters transaction_fees calculate_fee request example",7,"  === OPENAPI OPERATIONS ===  [GET /api/v2/transactionFees] {"tags":["TransactionFees"];"summary":"Calculates and returns transaction fees for a given net amount due based on the account.";"operationId":"TransactionFees_Get";"consumes":[];"produces":["application/json";"text/json";"application/xml";"text/xml"];"parameters":[{"name":"amount";"in":"query";"description":"Net amount due from which to calculate the transaction fees.";"required":true;"type":"number";"format":"double"};{"name":"impersonationAccountKey";"in":"header";"description":"";"required":false;"schema":{"type":"string"};"type":"string";"default":""}];"responses":{"200":{"description":"The transaction fees were successfully calculated.";"schema":{"$ref":"#/definitions/GetTransactionFeesResponseModel"}};"400":{"description":"Invalid request. Check the body for any related errors.";"schema":{"type":"object";"additionalProperties":{"$ref":"#/definitions/Object"}}};"401":{"description":"Invalid credentials. Please verify the key and secret used to generate the authorization header value."}};"deprecated":false;"security":[{"basic":[]}]}  ---  [POST /api/v2/transactions] {"tags":["Transactions"];"summary":"Processes a sale transaction for either ACH or credit card.";"operationId":"Transactions_Post";"consumes":["application/json";"text/json";"application/xml";"text/xml";"application/x-www-form-urlencoded"];"produces":["application/json";"text/json";"application/xml";"text/xml"];"parameters":[{"name":"postTransactionRequestModel";"in":"body";"description":"The details of the transaction to be processed. In the response; the Id of the created transaction is the last part of the URI in the location header attribute.";"required":true;"schema":{"$ref":"#/definitions/PostTransactionRequestModel"}};{"name":"impersonationAccountKey";"in":"header";"description":"The key that allows impersonation of another account for which the transaction is being processed. Only specify a value if the account being impersonated is",true,95,100,80,"The retrieved documentation directly addresses the user's need to calculate transaction fees by including the GET /api/v2/transactionFees endpoint. The documentation specifies the purpose of this endpoint ('Calculates and returns transaction fees for a given net amount due based on the account'), and clearly lists the required 'amount' parameter (in the query string) as well as an optional 'impersonationAccountKey' header. However, there is no example request or detailed response schema shown, which slightly reduces the completeness. Despite some extra unrelated endpoints, the needed information is present and usable, making this documentation highly effective for its primary purpose.",""
2025-10-09T11:36:49.302Z,twitter-api,"Twitter API","How is pagination handled in the Twitter API?","Twitter API pagination endpoints parameters next_token cursor documentation",10,"  === SECURITY ===  {   "securitySchemes": {     "BearerToken": {       "type": "http";       "scheme": "bearer"     };     "OAuth2UserToken": {       "type": "oauth2";       "flows": {         "authorizationCode": {           "authorizationUrl": "https://api.x.com/2/oauth2/authorize";           "tokenUrl": "https://api.x.com/2/oauth2/token";           "scopes": {             "block.read": "View accounts you have blocked.";             "bookmark.read": "Read your bookmarked Posts.";             "bookmark.write": "Create and delete your bookmarks.";             "dm.read": "Read all your Direct Messages.";             "dm.write": "Send and manage your Direct Messages.";             "follows.read": "View accounts you follow and accounts following you.";             "follows.write": "Follow and unfollow accounts on your behalf.";             "like.read": "View Posts you have liked and likes you can see.";             "like.write": "Like and unlike Posts on your behalf.";             "list.read": "View Lists; members; and followers of Lists you created or are a member of; including private Lists.";             "list.write": "Create and manage Lists on your behalf.";             "media.write": "Upload media; such as photos and videos; on your behalf.";             "mute.read": "View accounts you have muted.";             "mute.write": "Mute and unmute accounts on your behalf.";             "offline.access": "Request a refresh token for the app.";             "space.read": "View all Spaces you have access to.";             "timeline.read": "View all Custom Timelines you can see; including public Custom Timelines from other developers.";             "tweet.moderate.write": "Hide and unhide replies to your Posts.";             "tweet.read": "View all Posts you can see; including those from protected accounts.";             "tweet.write": "Post and repost on your behalf.";             "users.read": "View any account you can see; including protected accounts."           }     ",true,80,85,75,"The retrieved documentation discusses how pagination is handled in the Twitter API, referencing parameters like next_token and pagination_token, and explaining that these are used to retrieve the next page of results (with the value provided in the API response). It explicitly mentions endpoints such as GET /2/users/:id/liked_tweets and GET /2/tweets/:id/liking_users as examples, and the OpenAPI operation for GET /2/communities/search also includes both next_token and pagination_token as query parameters. However, the documentation is fragmented—there is not a single, concise example or walkthrough demonstrating how to use these parameters in a request/response cycle. Required and optional parameter descriptions are present, but example values or full API call samples are missing, which affects completeness. Endpoint identification is good but could be clearer with direct links or highlighted usage patterns.",""
2025-10-09T11:36:54.347Z,twitter-api,"Twitter API","How do I get posts from a user's timeline?","get user timeline posts API endpoint parameters",10,"up group; you can retrieve a list of accounts that have liked a Post; or a list of Posts that an account has liked. These endpoints include:  * Posts liked by a user - GET /2/users/:id/liked\_tweets * Users who have liked a Post - GET /2/tweets/:id/liking\_users You can authenticate these endpoints with either [OAuth 1.0a User Context](/resources/fundamentals/authentication) or [OAuth 2.0 Bearer Token](/resources/fundamentals/authentication#oauth-2-0). For the liked Posts endpoints; pagination tokens will be provided for paging through large sets of results. The liking users endpoint limits you to a total of 100 liking accounts per post for all time. Additionally; the liked Posts endpoint is also subject to the monthly [Post cap](/x-api/fundamentals/post-cap) applied at the Project level.   ###   [​](#manage-likes)  Manage Likes  The manage Likes endpoints enable you to like or unlike a specified Post on behalf of an authenticated account. For this endpoint group; there are two methods available POST and DELETE. The POST method allows you to like a Post; and the DELETE method will enable you to unlike a Post. Since you are making requests on behalf of a user; you must authenticate these endpoints with [OAuth 1.0a User Context](/resources/fundamentals/authentication) and use the Access Tokens associated with the user; which can be generated using the [3-legged OAuth flow](/resources/fundamentals/authentication#oauth-1-0a-2)/obtaining-user-access-tokens). You can like a Post from your account or an account of an authenticated user. With both endpoints; there is a user rate limit of 50 requests per 15 minutes per endpoint. To access these endpoint; you must have an approved [developer account](/resources/fundamentals/developer-portal). When authenticating; you must use keys and tokens from a [developer App](/resources/fundamentals/developer-apps) that is located within a [Project](/resources/fundamentals/projects). Learn more about getting access to the X API v2 endpoi",true,90,100,80,"The documentation includes the correct endpoint for retrieving posts from a user's timeline (GET /2/users/{id}/timelines/reverse_chronological), as well as related endpoints that could be relevant (GET /2/users/{id}/tweets for authored posts). The required and optional parameters for the timeline endpoint are clearly listed, such as 'id', 'since_id', 'until_id', 'max_results', 'pagination_token', 'exclude', and 'start_time'. However, there are no full request/response examples, and some parameter explanations are cut off. Still, the parameter documentation is sufficiently detailed for a developer to construct an API call, and the endpoint identification is explicit.",""
2025-10-09T11:37:00.286Z,trello-api,"Trello API","How do I create a new board?","create board API endpoint parameters request body documentation",9,"equired  #### Query parameters  **value**  TrelloID  ### Responses  Success  PUT/lists/{id}/closed  curl  Node.js  Java  Python  PHP  `12` `curl --request PUT \ --url 'https://api.trello.com/1/lists/{id}/closed?key=APIKey&token=APIToken'`  PUT  ## Move List to Board  Move a List to a different Board  Forge and OAuth2 apps cannot access this REST resource.  ### Request  #### Path parameters  **id**  TrelloID  Required  #### Query parameters  **value**  TrelloID  Required  ### Responses  Success  PUT/lists/{id}/idBoard  curl  Node.js  Java  Python  PHP  `12` `curl --request PUT \ --url 'https://api.trello.com/1/lists/{id}/idBoard?value=5abbe4b7ddc1b351ef961414&key=APIKey&token=APIToken'`  PUT  ## Update a field on a List  Rename a list  Forge and OAuth2 apps cannot access this REST resource.  ### Request  #### Path parameters  **id**  TrelloID  Required  **field**  string  Required  #### Query parameters  **value**  oneOf \[string; number; string; boolean\]  ### Responses  Success  PUT/lists/{id}/{field}  curl  Node.js  Java  Python  PHP  `12` `curl --request PUT \ --url 'https://api.trello.com/1/lists/{id}/{field}?key=APIKey&token=APIToken'`  GET  ## Get Actions for a List  Get the Actions on a List  Forge and OAuth2 apps cannot access this REST resource.  ### Request  #### Path parameters  **id**  string  Required  #### Query parameters  **filter**  string  ### Responses  Success  GET/lists/{id}/actions  curl  Node.js  Java  Python  PHP  `12` `curl --request GET \ --url 'https://api.trello.com/1/lists/{id}/actions?key=APIKey&token=APIToken'`  GET  ## Get the Board a List is on  Get the board a list is on  Forge and OAuth2 apps cannot access this REST resource.  ### Request  #### Path parameters  **id**  string  Required  #### Query parameters  **fields**  string  ### Responses  Success  GET/lists/{id}/board  curl  Node.js  Java  Python  PHP  `12` `curl --request GET \ --url 'https://api.trello.com/1/lists/{id}/board?key=APIKey&token=APIToken'`  GET  ## Get Cards in ",true,90,100,85,"The retrieved documentation directly includes the correct endpoint for creating a new board (`POST /boards/`). It provides the required parameter (`name`) and several optional parameters (such as `defaultLabels`, `defaultLists`, `desc`, `idOrganization`, etc.). There is also a clear cURL example of how to make the call. While there is some extra information about unrelated endpoints, the presence of the exactly correct endpoint with required/optional parameters and example usage makes this highly effective. Slight deduction for completeness due to some formatting inconsistencies and the indirect format of parameter descriptions, but all key developer needs are addressed.",""
2025-10-09T11:37:04.483Z,trello-api,"Trello API","How do I get a list of all cards in a board?","Trello API get all cards in board endpoint boardId cards",6,"/trello/rest/api-group-emoji/#api-group-emoji) * [Enterprises](/cloud/trello/rest/api-group-enterprises/#api-group-enterprises) * [Labels](/cloud/trello/rest/api-group-labels/#api-group-labels) * [Lists](/cloud/trello/rest/api-group-lists/#api-group-lists) * [Members](/cloud/trello/rest/api-group-members/#api-group-members) * [Notifications](/cloud/trello/rest/api-group-notifications/#api-group-notifications) * [Organizations](/cloud/trello/rest/api-group-organizations/#api-group-organizations) * [Plugins](/cloud/trello/rest/api-group-plugins/#api-group-plugins) * [Search](/cloud/trello/rest/api-group-search/#api-group-search) * [Tokens](/cloud/trello/rest/api-group-tokens/#api-group-tokens) * [Webhooks](/cloud/trello/rest/api-group-webhooks/#api-group-webhooks)  Cloud  Trello / Reference / REST API  # Cards  [Postman Collection](/cloud/trello/trello.postman.json)  [OpenAPI](https://dac-static.atlassian.com/cloud/trello/swagger.v3.json?%5Fv=1.740.0)  Operations  [POST/cards](/cloud/trello/rest/api-group-cards/#api-cards-post)[GET/cards/{id}](/cloud/trello/rest/api-group-cards/#api-cards-id-get)[PUT/cards/{id}](/cloud/trello/rest/api-group-cards/#api-cards-id-put)[DEL/cards/{id}](/cloud/trello/rest/api-group-cards/#api-cards-id-delete)[GET/cards/{id}/{field}](/cloud/trello/rest/api-group-cards/#api-cards-id-field-get)[GET/cards/{id}/actions](/cloud/trello/rest/api-group-cards/#api-cards-id-actions-get)[GET/cards/{id}/attachments](/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-get)[POST/cards/{id}/attachments](/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-post)[GET/cards/{id}/attachments/{idAttachment}](/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-idattachment-get)[DEL/cards/{id}/attachments/{idAttachment}](/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-idattachment-delete)[GET/cards/{id}/board](/cloud/trello/rest/api-group-cards/#api-cards-id-board-get)[GET/cards/{id}/checkItemStates](/cloud/trello/rest/api-g",true,90,95,70,"The retrieved documentation contains the correct endpoint for listing all cards on a board: GET /boards/{id}/cards. It also describes a variant for filtering cards (GET /boards/{id}/cards/{filter}). The required parameter (board ID) is mentioned. However, the documentation is missing concrete request/response examples and does not explain how to authenticate, which fields can be returned, or how to handle pagination. While the endpoint is clearly identified, details developers often need for immediate use (e.g., sample cURL commands or JSON responses) are lacking.",""
2025-10-09T11:37:11.556Z,gemini-api,"Gemini API","How do I generate content using the Gemini API?","Gemini API generate content endpoint parameters documentation",10,"s.com/v1beta/models/gemini-2.5-flash:generateContent" \   -H "x-goog-api-key: $GEMINI_API_KEY" \   -H 'Content-Type: application/json' \   -X POST \   -d '{     "contents": [       {         "parts": [           {             "text": "Explain how AI works in a few words"           }         ]       }     ]   }'  ```  ## Meet the models  [Start building with Gemini](https://aistudio.google.com/apps)    2.5 Prospark    Our most powerful thinking model with features for complex reasoning and much more  [](/gemini-api/docs/models#gemini-2.5-pro)    2.5 Flashspark    Our most balanced model; with a 1 million token context window and more  [](/gemini-api/docs/models/gemini#gemini-2.5-flash)    2.5 Flash-Litespark    Our fastest and most cost-efficient multimodal model with great performance for high-frequency tasks  [](/gemini-api/docs/models/gemini#gemini-2.5-flash-lite)    Veo 3video\_library    Our state of the art video generation model; with native audio  [](/gemini-api/docs/video)    Gemini 2.5 Flash Imageimagesmode    (Nano Banana); our highly effective and precise image generation model  [](/gemini-api/docs/image-generation)    Gemini Embeddingsdata\_array    Our first Gemini embedding model; designed for production RAG workflows  [](/gemini-api/docs/embeddings)   ## Explore the API  ### Native Image Generation (aka Nano Banana)  Generate and edit highly contextual images natively with Gemini 2.5 Flash Image.  [](/gemini-api/docs/image-generation)   ### Explore long context  Input millions of tokens to Gemini models and derive understanding from unstructured images; videos; and documents.  [](/gemini-api/docs/long-context)   ### Generate structured outputs  Constrain Gemini to respond with JSON; a structured data format suitable for automated processing.  [](/gemini-api/docs/structured-output)   ### Start building with the Gemini API  [Get started](/gemini-api/docs/quickstart)   Except as otherwise noted; the content of this page is licensed under the [Creative Co",true,80,90,75,"The retrieved documentation provides a direct code snippet for generating content using the Gemini API, including the correct endpoint (https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent), necessary headers, and a sample JSON request body with parameters. However, only one example is shown, and it lacks a full reference listing all required/optional parameters or detailed field descriptions for contents, parts, or other possible configurable options. Some extraneous information about models and batch APIs is present, but the core information needed to make a basic content generation call is present and mostly clear.",""
2025-10-09T11:37:16.442Z,gemini-api,"Gemini API","How do I count tokens I used?","count tokens API endpoint usage parameter documentation",10,"lem";"thumb-up"\];\["Other";"otherUp";"thumb-up"\]\];\[\["Missing the information I need";"missingTheInformationINeed";"thumb-down"\];\["Too complicated / too many steps";"tooComplicatedTooManySteps";"thumb-down"\];\["Out of date";"outOfDate";"thumb-down"\];\["Samples / code issue";"samplesCodeIssue";"thumb-down"\];\["Other";"otherDown";"thumb-down"\]\];\["Last updated 2025-09-22 UTC."\];\[\];\[\]\]   * On this page * [Method: models.get](#method:-models.get)      * [Endpoint](#endpoint)      * [Path parameters](#path-parameters)      * [Request body](#request-body)      * [Example request](#example-request)      * [Response body](#response-body) * [Method: models.list](#method:-models.list)      * [Endpoint](#endpoint%5F1)      * [Query parameters](#query-parameters)      * [Request body](#request-body%5F1)      * [Example request](#example-request%5F1)      * [Response body](#response-body%5F1) * [REST Resource: models](#rest-resource:-models) * [Resource: Model](#Model) * [Method: models.predict](#method:-models.predict)      * [Endpoint](#endpoint%5F2)      * [Path parameters](#path-parameters%5F1)      * [Request body](#request-body%5F2)      * [Response body](#response-body%5F2) * [Method: models.predictLongRunning](#method:-models.predictlongrunning)      * [Endpoint](#endpoint%5F3)      * [Path parameters](#path-parameters%5F2)      * [Request body](#request-body%5F3)      * [Response body](#response-body%5F3)   A new native audio model is available for the Live API. [Learn more](https://ai.google.dev/gemini-api/docs/live)   * [ Home](https://ai.google.dev/) * [ Gemini API](https://ai.google.dev/gemini-api) * [ API Reference](https://ai.google.dev/api)  Was this helpful?  #  Models   * On this page * [Method: models.get](#method:-models.get)      * [Endpoint](#endpoint)      * [Path parameters](#path-parameters)      * [Request body](#request-body)      * [Example request](#example-request)      * [Response body](#response-body) * [Method: models.list](#meth",true,40,20,20,"The retrieved documentation does not directly answer the user's question about how to count tokens used or whether there is an API endpoint for retrieving token usage. While there is some explanation of token concepts and mentions of token limits in the context of model parameters, there is no clear reference to an endpoint or parameter that provides token usage statistics. The endpoints discussed (such as models.get or models.predict) are general and do not specifically relate to querying token usage or count, nor do they provide examples or required parameters for such queries.",""
2025-10-09T11:37:23.418Z,linear-api,"Linear API","How do I create a new triage issue?","create triage issue API endpoint parameters request example",10,"on":"The time at which the issue entered triage.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"triagedAt";"description":"The time at which the issue left triage.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"canceledAt";"description":"The time at which the issue was moved into canceled state.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"autoClosedAt";"description":"The time at which the issue was automatically closed by the auto pruning process.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"autoArchivedAt";"description":"The time at which the issue was automatically archived by the auto pruning process.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"dueDate";"description":"The date at which the issue is due.";"args":[];"type":{"kind":"SCALAR";"name":"TimelessDate";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"slaStartedAt";"description":"The time at which the issue's SLA began.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"slaMediumRiskAt";"description":"The time at which the issue's SLA will enter medium risk state.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"slaHighRiskAt";"description":"The time at which the issue's SLA will enter high risk state.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofType":null};"isDeprecated":false;"deprecationReason":null};{"name":"slaBreachesAt";"description":"The time at which the issue's SLA will breach.";"args":[];"type":{"kind":"SCALAR";"name":"DateTime";"ofT",true,55,10,30,"The retrieved documentation appears to contain fragments of API parameter definitions related to issues, including fields like 'teamId', 'labelIds', 'dueDate', and potential triage-related fields. However, it does not explicitly specify which endpoint to use to create a triage issue, nor does it provide an example request or mention the HTTP method (e.g., POST). While some structural and parameter information is available, it's scattered and incomplete, making it hard for a developer to confidently construct an API call without further documentation. Endpoint identification is especially weak, as there's no endpoint path or operation name.",""
2025-10-09T11:37:30.675Z,linear-api,"Linear API","How do I get a list of all issues?","API list issues endpoint get all issues parameters documentation",10,"es title.";"type":{"kind":"INPUT_OBJECT";"name":"StringComparator";"ofType":null};"defaultValue":null};{"name":"description";"description":"Comparator for the issues description.";"type":{"kind":"INPUT_OBJECT";"name":"NullableStringComparator";"ofType":null};"defaultValue":null};{"name":"priority";"description":"Comparator for the issues priority. 0 = No priority; 1 = Urgent; 2 = High; 3 = Normal; 4 = Low.";"type":{"kind":"INPUT_OBJECT";"name":"NullableNumberComparator";"ofType":null};"defaultValue":null};{"name":"estimate";"description":"Comparator for the issues estimate.";"type":{"kind":"INPUT_OBJECT";"name":"EstimateComparator";"ofType":null};"defaultValue":null};{"name":"startedAt";"description":"Comparator for the issues started at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"triagedAt";"description":"Comparator for the issues triaged at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"completedAt";"description":"Comparator for the issues completed at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"canceledAt";"description":"Comparator for the issues canceled at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"archivedAt";"description":"Comparator for the issues archived at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"autoClosedAt";"description":"Comparator for the issues auto closed at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"autoArchivedAt";"description":"Comparator for the issues auto archived at date.";"type":{"kind":"INPUT_OBJECT";"name":"NullableDateComparator";"ofType":null};"defaultValue":null};{"name":"addedToCycleAt";"description":"Comparator for the ",true,40,10,25,"The retrieved documentation appears to be a partial and fragmented schema or parameter list, likely from a GraphQL or advanced filter API, rather than clear REST endpoint documentation. While it mentions fields and filters relevant to 'issues', it does NOT clearly state how a developer would actually call the API (no URL/path/method, e.g., GET /issues or equivalent GraphQL query). The parameter descriptions and types provide hints about filtering capabilities, but there is no clear endpoint, example call, authentication info, or step-by-step usage. Overall, developers would struggle to use this retrieval to successfully make a real API call for listing all issues.",""
2025-10-09T11:37:38.070Z,claude-api,"Claude API","How does Claude handle Rate Limiting?","Claude API rate limiting endpoints parameters limits",10,"[Claude Docs home page](/)  [Welcome](/en/home)[Claude Developer Platform](/en/docs/intro)[Claude Code](/en/docs/claude-code/overview)[Model Context Protocol (MCP)](/en/docs/mcp)[API Reference](/en/api/messages)[Resources](/en/resources/overview)[Release Notes](/en/release-notes/overview)  * [Developer Guide](/en/docs/intro) * [API Guide](/en/api/overview)  ##### Using the APIs  * [Overview](/en/api/overview) * [Rate limits](/en/api/rate-limits) * [Service tiers](/en/api/service-tiers) * [Errors](/en/api/errors) * [Handling stop reasons](/en/api/handling-stop-reasons) * [Beta headers](/en/api/beta-headers)  ##### API reference  * Messages * Models * Message Batches * Files * Admin API      * Organization Info      * Organization Member Management      * Organization Invites      * Workspace Management      * Workspace Member Management      * API Keys      * Usage and Cost            * [GETGet Usage Report for the Messages API](/en/api/admin-api/usage-cost/get-messages-usage-report)            * [GETGet Cost Report](/en/api/admin-api/usage-cost/get-cost-report)            * [GETGet Claude Code Usage Report](/en/api/admin-api/claude-code/get-claude-code-usage-report) * Experimental APIs * Text Completions (Legacy)  ##### SDKs  * [Client SDKs](/en/api/client-sdks) * [OpenAI SDK compatibility](/en/api/openai-sdk) * Agent SDK  ##### Examples  * [Messages examples](/en/api/messages-examples) * [Message Batches examples](/en/api/messages-batch-examples)  ##### 3rd-party APIs  * [Amazon Bedrock API](/en/api/claude-on-amazon-bedrock) * [Vertex AI API](/en/api/claude-on-vertex-ai)  ##### Using the Admin API  * [Admin API overview](/en/api/administration-api) * [Usage and Cost API](/en/api/usage-cost-api) * [Claude Code Analytics API](/en/api/claude-code-analytics-api)  ##### Support & configuration  * [Versions](/en/api/versioning) * [IP addresses](/en/api/ip-addresses) * [Supported regions](/en/api/supported-regions) * [Getting help](/en/api/getting-help)  cURL  Copy  ``` c",true,65,40,35,"The retrieved documentation references a 'Rate limits' page and mentions standard endpoints like the Messages API, but it does not directly surface actual rate limit values, specific rate limiting behaviors, quota thresholds, or error handling strategies for rate limiting (e.g., HTTP status codes like 429 or relevant headers). While links to the correct conceptual area are present, there is no clear identification of a dedicated rate limit-related endpoint (such as a `/rate-limits` endpoint) or in-line rate limit information for any endpoints. Required/optional parameters, practical usage examples for dealing with rate limiting, and retry strategies are lacking. The answer is thus only partially helpful for a developer who needs to understand or handle API rate limiting.",""
2025-10-09T11:37:48.488Z,claude-api,"Claude API","How do I create a new message in a conversation?","create message API endpoint conversation send POST parameters",10,"2` or specify the header multiple times for each beta.  [​](#parameter-anthropic-version)  anthropic-version  string  required  The version of the Claude API you want to use.  Read more about versioning and our version history [here](https://docs.claude.com/en/api/versioning).  [​](#parameter-x-api-key)  x-api-key  string  required  Your unique API key for authentication.  This key is required in the header of all API requests; to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.  #### Body  application/json  [​](#body-messages)  messages  InputMessage · object\[\]  required  Input messages.  Our models are trained to operate on alternating `user` and `assistant` conversational turns. When creating a new `Message`; you specify the prior conversational turns with the `messages` parameter; and the model then generates the next `Message` in the conversation. Consecutive `user` or `assistant` turns in your request will be combined into a single turn.  Each input message must be an object with a `role` and `content`. You can specify a single `user`\-role message; or you can include multiple `user` and `assistant` messages.  If the final message uses the `assistant` role; the response content will continue immediately from the content in that message. This can be used to constrain part of the model's response.  Example with a single `user` message:  ``` [{"role": "user"; "content": "Hello; Claude"}] ```  Example with multiple conversational turns:  ``` [   {"role": "user"; "content": "Hello there."};   {"role": "assistant"; "content": "Hi; I'm Claude. How can I help you?"};   {"role": "user"; "content": "Can you explain LLMs in plain English?"}; ] ```  Example with a partially-filled response from Claude:  ``` [   {"role": "user"; "content": "What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun"};   {"role": "assistant"; "content": "The bes",true,80,60,75,"The retrieved documentation contains most of the relevant details needed to create a new message in a conversation. It covers required headers (anthropic-version, x-api-key), body parameters (model, messages), the required structure of the messages array with clear examples, and provides details about how conversational history should be formatted. However, it does not clearly identify the exact API endpoint (e.g., POST /v1/messages or similar); that information is missing or buried in extraneous sections, reducing the endpoint clarity score. Detailed parameter descriptions and examples are strong, but a developer would have to infer or look elsewhere for the precise endpoint URL. Thus, while sufficient technical details and examples are given, the lack of explicit endpoint identification limits usability.",""
2025-10-09T11:37:54.252Z,pokeapi-api,"PokeAPI API","How do I get a list of gen2 pokemons?","GET endpoint list gen2 Pokémon API documentation generation parameter",10,"Level up"                     * ▶                     language:{} 2 keys                                 * name:"en"                                 * url:"https://pokeapi.co/api/v2/language/9/"      * ▶      pokemon\_species:\[\] 1 item            * ▶            0:{} 2 keys                     * name:"ivysaur"                     * url:"https://pokeapi.co/api/v2/pokemon-species/2/"   View raw JSON (0.321 kB; 19 lines)  #### EvolutionTrigger (type)  | Name             | Description                                                        | Type                                                                              | | ---------------- | ------------------------------------------------------------------ | --------------------------------------------------------------------------------- | | id               | The identifier for this resource.                                  | _integer_                                                                         | | name             | The name for this resource.                                        | _string_                                                                          | | names            | The name of this resource listed in different languages.           | list _[Name](#name)_                                                              | | pokemon\_species | A list of pokemon species that result from this evolution trigger. | list __[NamedAPIResource](#namedapiresource) ([PokemonSpecies](#pokemonspecies))_ |  ## Games (group)  ### Generations (endpoint)  A generation is a grouping of the Pokémon games that separates them based on the Pokémon they include. In each generation; a new set of Pokémon; Moves; Abilities and Types that did not exist in the previous generation are released.  GET https://pokeapi.co/api/v2/generation/{id or name}/  * * id:1      * name:"generation-i"      * abilities:\[\] 0 items      * ▶      main\_region:{} 2 keys            * name:"kanto"            * url:"https://pokeapi.co/",true,80,85,65,"The retrieved documentation surfaces the relevant endpoint to list Pokémon by generation: GET https://pokeapi.co/api/v2/generation/{id or name}/. It explicitly mentions that calling this endpoint with the appropriate generation value (e.g., 'generation-ii' for Gen 2) will return, among other properties, a 'pokemon_species' list which contains the Pokémon introduced in that generation. However, while the endpoint and response structure are present, the documentation lacks explicit parameter details (such as valid values for {id or name}) and has no example API requests or responses. The user may need to guess or search elsewhere to confirm that 'generation-ii' is the correct path value, and there is no copy-paste-ready usage example. Thus, while the core information is present, the completeness for direct implementation is moderate.",""
2025-10-09T11:37:59.238Z,pokeapi-api,"PokeAPI API","How do find information about a specific berry?","berry endpoint get information parameters API documentation",10,"eristic`; `contest-effect`; `evolution-chain`; `machine`; `super-contest-effect` endpoints are unnamed; the rest are named.  ### Named (endpoint)  GET https://pokeapi.co/api/v2/{endpoint}/  * * count:248      * next:"https://pokeapi.co/api/v2/ability/?limit=20&offset=20"      * previous:null      * ▶      results:\[\] 1 item            * ▶            0:{} 2 keys                     * name:"stench"                     * url:"https://pokeapi.co/api/v2/ability/1/"   View raw JSON (0.213 kB; 11 lines)  #### NamedAPIResourceList (type)  | Name     | Description                                            | Type                                         | | -------- | ------------------------------------------------------ | -------------------------------------------- | | count    | The total number of resources available from this API. | _integer_                                    | | next     | The URL for the next page in the list.                 | _string_                                     | | previous | The URL for the previous page in the list.             | _string_                                     | | results  | A list of named API resources.                         | list _[NamedAPIResource](#namedapiresource)_ |  ### Unnamed (endpoint)  GET https://pokeapi.co/api/v2/{endpoint}/  * * count:541      * next:"https://pokeapi.co/api/v2/evolution-chain?offset=20&limit=20"      * previous:null      * ▶      results:\[\] 1 item            * ▶            0:{} 1 key                     * url:"https://pokeapi.co/api/v2/evolution-chain/1/"   View raw JSON (0.204 kB; 10 lines)  #### APIResourceList (type)  | Name     | Description                                            | Type                               | | -------- | ------------------------------------------------------ | ---------------------------------- | | count    | The total number of resources available from this API. | _integer_                          | | next     | The URL for the next page in the list",true,95,95,80,"The documentation retrieved directly addresses information about berries. It clearly identifies the correct endpoint (GET https://pokeapi.co/api/v2/berry/{id or name}/), shows sample data returned, and lists relevant fields. The endpoint and how to use it are quite clear. However, there is no explicit example API call or list of which parameters are allowed/required (though '{id or name}' is strongly implied and shown in use), and there are no specific usage instructions or code samples, which slightly lowers completeness. Overall, this documentation is highly relevant and sufficient for a developer to find information about a specific berry.",""
